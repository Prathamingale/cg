#include <GL/freeglut.h>
#include <GL/glut.h>

int screenWidth = 640;
int screenHeight = 480;
int numVertices = 0;
int currentColor = 0;
int colors[][3] = {
    {255, 0, 0},     // Red
    {0, 255, 0},     // Green
    {0, 0, 255},     // Blue
    {255, 255, 0},   // Yellow
    {255, 0, 255},   // Magenta
    {0, 255, 255}    // Cyan
};
float vertices[100][2];

void drawColorPanel() {
    int panelWidth = 50;
    int panelHeight = screenHeight / 6;
    int panelX = screenWidth - panelWidth;
    int panelY = 0;

    for (int i = 0; i < 6; i++) {
        glBegin(GL_QUADS);
        glColor3ub(colors[i][0], colors[i][1], colors[i][2]);
        glVertex2i(panelX, panelY + i * panelHeight);
        glVertex2i(panelX + panelWidth, panelY + i * panelHeight);
        glVertex2i(panelX + panelWidth, panelY + (i + 1) * panelHeight);
        glVertex2i(panelX, panelY + (i + 1) * panelHeight);
        glEnd();
    }
}

void drawPolygon() {
    glBegin(GL_LINE_LOOP);
    for (int i = 0; i < numVertices; i++) {
        glColor3ub(colors[currentColor][0], colors[currentColor][1], colors[currentColor][2]);
        glVertex2fv(vertices[i]);
    }
    glEnd();
}

void draw() {
    glClear(GL_COLOR_BUFFER_BIT);

    drawColorPanel();
    drawPolygon();

    glFlush();
}

void mouse(int button, int state, int x, int y) {
    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {
        if (x > screenWidth - 50) {
            int colorIndex = y / (screenHeight / 6);
            currentColor = colorIndex;
        } else {
            float normalizedX = (float)x / screenWidth;
            float normalizedY = 1.0 - (float)y / screenHeight;
            vertices[numVertices][0] = normalizedX;
            vertices[numVertices][1] = normalizedY;
            numVertices++;
        }
    }
    glutPostRedisplay();
}

void init() {
    glClearColor(1.0, 1.0, 1.0, 0.0);
    gluOrtho2D(0, screenWidth, 0, screenHeight);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(screenWidth, screenHeight);
    glutCreateWindow("Polygon Drawing");
    init();
    glutDisplayFunc(draw);
    glutMouseFunc(mouse);
    glutMainLoop();

    return 0;
}
