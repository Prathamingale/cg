#include <GL/freeglut.h>
#include <GL/glut.h>

int screenWidth = 640;
int screenHeight = 480;

void drawTriangle(float x1, float y1, float x2, float y2, float x3, float y3) {
    glBegin(GL_TRIANGLES);
    glVertex2f(x1, y1);
    glVertex2f(x2, y2);
    glVertex2f(x3, y3);
    glEnd();
}

void drawSierpinski(float x1, float y1, float x2, float y2, float x3, float y3, int depth) {
    if (depth == 0) {
        drawTriangle(x1, y1, x2, y2, x3, y3);
    }
    else {
        float midX1 = (x1 + x2) / 2;
        float midY1 = (y1 + y2) / 2;
        float midX2 = (x2 + x3) / 2;
        float midY2 = (y2 + y3) / 2;
        float midX3 = (x3 + x1) / 2;
        float midY3 = (y3 + y1) / 2;

        drawSierpinski(x1, y1, midX1, midY1, midX3, midY3, depth - 1);
        drawSierpinski(midX1, midY1, x2, y2, midX2, midY2, depth - 1);
        drawSierpinski(midX3, midY3, midX2, midY2, x3, y3, depth - 1);
    }
}

void draw() {
    glClear(GL_COLOR_BUFFER_BIT);

    glColor3f(1.0, 0.0, 0.0); // Red color
    drawSierpinski(0.0, 0.0, screenWidth, 0.0, screenWidth / 2, screenHeight, 5);

    glFlush();
}

void init() {
    glClearColor(1.0, 1.0, 1.0, 0.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0, screenWidth, 0, screenHeight);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(screenWidth, screenHeight);
    glutInitWindowPosition(0, 0);
    glutCreateWindow("Sierpinski Triangle");
    init();
    glutDisplayFunc(draw);
    glutMainLoop();

    return 0;
}
